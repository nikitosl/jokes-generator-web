steps:
  # Build image for TG-PUBLISHER
  - name: gcr.io/cloud-builders/docker
    secretEnv: [ 'TG_API_TOKEN', 'NEWS_API_TOKEN' ]
    entrypoint: bash
    args:
      - -c
      - |
        docker build -t gcr.io/${PROJECT_ID}/${_TG_SERVICE_NAME}:$COMMIT_SHA --build-args=MODEL_URL=http://${_MODEL_SERVICE_NAME}:8080/,TZ=Asia/Tbilisi,TG_API_TOKEN=$$TG_API_TOKEN,NEWS_API_TOKEN=$$NEWS_API_TOKEN tg_publisher

  # Build image for WEB-SERVICE
  - name: gcr.io/cloud-builders/docker
    secretEnv: [ 'FLASK_SECRET_KEY' ]
    entrypoint: bash
    args:
      - -c
      - |
        docker build -t gcr.io/${PROJECT_ID}/${_WEB_SERVICE_NAME}:$COMMIT_SHA --build-args=MODEL_URL=http://${_MODEL_SERVICE_NAME}:8080/,TZ=Asia/Tbilisi,FLASK_SECRET_KEY=$$FLASK_SECRET_KEY web

  # Build image for MODEL-API
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker build -t gcr.io/${PROJECT_ID}/${_MODEL_SERVICE_NAME}:$COMMIT_SHA --build-args=MODEL_NAME=naltukhov/joke-generator-rus-t5,MODEL_REVISION=latest,TZ=Asia/Tbilisi api

  # Push TG-PUBLISHER image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "push", "gcr.io/${PROJECT_ID}/${_TG_SERVICE_NAME}:$COMMIT_SHA" ]

  # Push WEB-SERVICE image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "push", "gcr.io/${PROJECT_ID}/${_WEB_SERVICE_NAME}:$COMMIT_SHA" ]

  # Push MODEL-API image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "push", "gcr.io/${PROJECT_ID}/${_MODEL_SERVICE_NAME}:$COMMIT_SHA" ]

  # Deploy WEB-SERVICE container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run deploy ${_WEB_SERVICE_NAME} --image gcr.io/$PROJECT_ID/${_WEB_SERVICE_NAME}:$COMMIT_SHA --region europe-west2 --platform managed --allow-unauthenticated

  # Deploy MODEL-API container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run deploy ${_MODEL_SERVICE_NAME} --image gcr.io/$PROJECT_ID/${_MODEL_SERVICE_NAME}:$COMMIT_SHA --region europe-west2 --platform managed --allow-unauthenticated
    timeout: 3600s

images:
  - 'gcr.io/$PROJECT_ID/${_TG_SERVICE_NAME}:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_WEB_SERVICE_NAME}:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_MODEL_SERVICE_NAME}:$COMMIT_SHA'

timeout: 3600s

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/tg-bot-token/versions/latest
      env: 'TG_API_TOKEN'
    - versionName: projects/${PROJECT_ID}/secrets/news-api-token/versions/latest
      env: 'NEWS_API_TOKEN'
    - versionName: projects/${PROJECT_ID}/secrets/flask-secret-key/versions/latest
      env: 'FLASK_SECRET_KEY'

options:
  logging: CLOUD_LOGGING_ONLY
