steps:
  # Build image for TG-PUBLISHER
  - name: gcr.io/cloud-builders/docker
    args:
      [ "build", "-t", "gcr.io/${PROJECT_ID}/${_TG_SERVICE_NAME}:$COMMIT_SHA", "tg_publisher" ]
    env:
      - 'MODEL_URL=http://${_MODEL_SERVICE_NAME}:8080/'
      - 'TZ=Asia/Tbilisi'
    secretEnv: [ 'TG_API_TOKEN', 'NEWS_API_TOKEN' ]

  # Build image for WEB-SERVICE
  - name: gcr.io/cloud-builders/docker
    args:
      [ "build", "-t", "gcr.io/${PROJECT_ID}/${_WEB_SERVICE_NAME}:$COMMIT_SHA", "web" ]
    env:
      - 'MODEL_URL=http://${_MODEL_SERVICE_NAME}:8080/'
      - 'TZ=Asia/Tbilisi'
    secretEnv: [ 'FLASK_SECRET_KEY' ]

  # Build image for MODEL-API
  - name: gcr.io/cloud-builders/docker
    args:
      [ "build", "-t", "gcr.io/${PROJECT_ID}/${_MODEL_SERVICE_NAME}:$COMMIT_SHA", "api" ]
    env:
      - 'MODEL_NAME=naltukhov/joke-generator-rus-t5'
      - 'MODEL_REVISION=latest'
      - 'TZ=Asia/Tbilisi'

  # Push TG-PUBLISHER image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "push", "gcr.io/${PROJECT_ID}/${_TG_SERVICE_NAME}:$COMMIT_SHA" ]

  # Push WEB-SERVICE image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "push", "gcr.io/${PROJECT_ID}/${_WEB_SERVICE_NAME}:$COMMIT_SHA" ]

  # Push MODEL-API image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "push", "gcr.io/${PROJECT_ID}/${_MODEL_SERVICE_NAME}:$COMMIT_SHA" ]

  # Deploy WEB-SERVICE container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_WEB_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/${_WEB_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - 'europe-west2'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

  # Deploy MODEL-API container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_MODEL_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/${_MODEL_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - 'europe-west2'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

images:
  - 'gcr.io/$PROJECT_ID/${_TG_SERVICE_NAME}:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_WEB_SERVICE_NAME}:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_MODEL_SERVICE_NAME}:$COMMIT_SHA'


availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/tg_publisher-bot-token/versions/latest
      env: 'TG_API_TOKEN'
    - versionName: projects/${PROJECT_ID}/secrets/news-api-token/versions/latest
      env: 'NEWS_API_TOKEN'
    - versionName: projects/${PROJECT_ID}/secrets/flask-secret-key/versions/latest
      env: 'FLASK_SECRET_KEY'

options:
  logging: CLOUD_LOGGING_ONLY